<?xml version="1.0"?>
<Component ContentHeight="20" ContentWidth="100" Decimals="2"
    Description="" Fill="#FFD100" Height="20.0" Left="287.0"
    NAValue="163.835" Name="MNL Analog Override With NA" Top="250.0"
    Units="%" Width="100.0">
    <Script OnDocumentLoad="onLoad" OnSignalChange="onChange"><![CDATA[

var comp;
var dec;
var units;
var offColor;
var onColor;											// Variables that are declared globally so they can be used in all the functions.
var forceColor;
var valueBind;
var ovrBind;
var forcedState;


function onLoad(evt)
{
	comp=evt.getCurrentTarget();
	offColor=comp.getChildByName("background").getAttribute("Stroke");	
	forceColor=comp.getAttribute("Fill");								// Short cuts that are made to improve readability and to cut down on typing.
	onColor=comp.getAttribute("Stroke");								// These short cuts are going to be used in the rest of the component.
	dec = comp.getAttribute("Decimals");
	units = comp.getAttribute("Units");
	forcedState = false;
	
	var bindGroup = comp.getChildByName("Binds");
	if(bindGroup)														// If statement that sets binds up. The 2 binds that are set are the Value Bind and the Override Bind. 
	{
		var bindList = bindGroup.getElementsByTagName("Bind");
		var i = bindList.length;
		while(i--)
		{
			var child = bindList.item(i);
			var description = String(child.getAttribute("Description"));

			//alert(description);

			if(description.equals("ValueBind"))
			{
				valueBind = child;
			}
			if(description.equals("OvrBind"))
			{
				ovrBind = child;
			}
		}
	}
	else
	{
		alert("Not bindGroup");								// An alert that lets the user know that there is no bindgroup.
	}	
}



function onChange(evt)										// Function that handles what happens when a bound value changes. 
{
	
	if(evt.getTarget().getFullBindName() == valueBind.getFullBindName())			// If statement that handles the update of the value bind. 
	{
		
		comp.getChildByName("Text").setAttribute("Content", getDisplayText(evt.value));	// Sets  the text box content to the value that is recieved from the bind. 
		
		if(!forcedState)
		{
			setValue(ovrBind.getFullBindName(), naValue);						// Sets the value of the override bind to null when the component is not in a forced state. 
			setTimeout("setValue(ovrBind.getFullBindName(), naValue)", 5000);
		}
	}

	if(evt.getTarget().getFullBindName() == ovrBind.getFullBindName())			// If statement that handles the update of the override bind. 
	{
		

		var naValue = parseFloat(comp.getAttribute("NAValue"));					// Variable that has the stored attribute of NA value and since this is a LON point it will will be 163.835.
		var status = parseInt(evt.getStatus());
		var outline = comp.getChildByName("background");


		if(status!=3)															// If statement that handles what happens when a statement is not forced.
		{
			
			setValue(ovrBind.getFullBindName(), naValue);
			setTimeout("setValue(ovrBind.getFullBindName(), naValue)", 5000);			
			forcedState = false;													// Settings that will happen if the component is forced.
			outline.setAttribute("Stroke", offColor);
			outline.setAttribute("StrokeWidth", "1");
		}
		else
		{
			forcedState = true;
			
			outline.setAttribute("Stroke", forceColor);
			outline.setAttribute("StrokeWidth", "2");
		}		
	}
}

function borderCol(status)					// Function that sets the border color to the force color when the component is forced. 
{
	if(status==3)
	{
		return forceColor
	}	
}

function Bool(val)							// Function that checks the value received from the bind and compares it to array that holds the string values from the exposed property On Value. 
{
	for (var i=0;i<onValue.length;i++)		
	{
		if(String(val).toLowerCase() == String(onValue[i]).toLowerCase())
		{
			return true;
		}
	}
	return false;
}

function getDisplayText(value)				// Handles the formatting of the display text. 
{
	try
	{
		var str = "...";
		if(!isNaN(value) && value != Infinity)
		{
			str = new Number(parseFloat(value)).toFixed(dec);
			str += " " + units;
		}
		return str;
	}
	catch(ex)
	{
		return "...";
	}
}]]></Script>
    <Expose ExposedAttribute="Decimals" Name="Decimals"/>
    <Expose ExposedAttribute="Units" Name="Units"/>
    <Expose ExposedAttribute="NAValue" Name="WPT NA Value"/>
    <Expose ExposedAttribute="Fill" Name="Forced Color"/>
    <Rectangle Fill="None" Height="20.0" Left="0" Name="background"
        RadiusX="5" RadiusY="5" Stroke="#626469" StrokeDashArray="0.0"
        StrokeWidth="1.0" Top="0" Width="100">
        <LinearGradient EndPoint="0,1">
            <GradientStop Color="#FEFEFE" Offset="0"/>
            <GradientStop Color="#DFE0E2" Offset="1.0"/>
        </LinearGradient>
        <Expose ExposedAttribute="Width" Name="Component Width"/>
    </Rectangle>
    <TextBox Fill="None" FontFamily="Arial" FontSize="15.0"
        FontStyle="Normal" FontWeight="Normal" Height="20.0"
        HorizontalAlign="Center" Left="-5" Name="Text" Stroke="#000000"
        TextDecoration="None" Top="0.0" VerticalAlign="Middle"
            Width="100"><![CDATA[...]]><Expose ExposedAttribute="Width" Name="Component Width"/>
    </TextBox>
    <Component Clip="False" ContentHeight="20.0" ContentWidth="15"
        Height="20.0" Left="85" Name="OvrArrow" Top="0" Width="15.0">
        <Path Fill="#009530" Name="OvrBox"
            PathData="M0.0,0.0 C5.0,0.0 5,0 10,0 12,0 15,2 15,5 15,10 15,15 15,15 15,18 12,20 9,20 4,20 5.0,20.0 0.0,20.0 0.0,15.0 0.0,5.0 0.0,0.0"
            Stroke="#004000" StrokeDashArray="0.0" StrokeWidth="1.0">
            <Expose ExposedAttribute="Stroke" Name="Border Color"/>
        </Path>
        <Polygon Fill="#FFFFFF" Name="OvrArrow"
            Points="9.83830081246947,3.812333812258316 2.670400857925415,9.837342605211944 9.83830081246947,15.862351398165572"
            Stroke="None" StrokeDashArray="0.0" StrokeWidth="0"/>
        <Expose ExposedAttribute="Left" Name="Ovr Icon Pos"/>
    </Component>
    <Group Name="Binds">
        <Bind Attribute="" Color="#009530" Description="ValueBind" Id=""
            Name="Value" PreventDefault="False">
            <Expose ExposedAttribute="Name" Name="Value Bind"/>
            <Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
        </Bind>
        <Bind Description="OvrBind" Id="" Name="Override" PreventDefault="False">
            <Expose ExposedAttribute="Name" Name="Override Bind"/>
            <Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
        </Bind>
    </Group>
    <Expose ExposedAttribute="ContentWidth" Name="Component Width"/>
    <Expose ExposedAttribute="Width" Name="Component Width"/>
    <Metadata Name="Name" Value="MNL Analog Override With NA"/>
    <Metadata Name="Description" Value=""/>
</Component>
