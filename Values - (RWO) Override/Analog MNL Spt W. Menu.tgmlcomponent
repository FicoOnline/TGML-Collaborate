<?xml version="1.0"?>
<Component Clip="False" ContentHeight="20" ContentWidth="100"
    Decimals="1" Fill="#FFD100" Height="20.0" Left="585.0"
    Name="Analog MNL Spt W. Menu" Top="253.6666258573532"
    Visibility="Visible" Width="100.0">
    <Component Clip="False" Height="0" Id="" Left="-90" Name=""
        Top="-45" Visibility="Hidden" Width="0">
        <Group Name="01">
            <Rectangle Fill="#FFFFFF" Height="85" Left="0"
                Name="Background" RadiusX="5" RadiusY="5"
                Stroke="#626469" Top="0" Width="230"/>
            <Rectangle Fill="None" Height="20" Left="150"
                Name="Value Display Background" RadiusX="5" RadiusY="5"
                Stroke="#626469" Top="35" Width="65"/>
            <Rectangle Fill="None" Height="20.0" Left="150"
                Name="Override Value Display Background" RadiusX="5"
                RadiusY="5" Stroke="#626469" Top="60" Width="65"/>
            <TextBox Fill="None" FontFamily="Arial" FontSize="15.0"
                FontStyle="Normal" FontWeight="Bold"
                Height="20.490394592285156" HorizontalAlign="Left"
                Left="15" Name="Component Title" Opacity="1.0"
                Stroke="#000000" TextDecoration="None" Top="3"
                VerticalAlign="Top" Width="135.98178100585938"><![CDATA[Test Title]]></TextBox>
            <Text Fill="#FFFFFF" FontFamily="Arial" FontSize="12"
                FontStyle="Normal" FontWeight="Bold"
                HorizontalAlign="Right" Left="140"
                Name="Point Value Label" Opacity="1.0" Stroke="#000000"
                TextDecoration="None" Top="40" VerticalAlign="Top"><![CDATA[Value]]></Text>
            <Text Fill="None" FontFamily="Arial" FontSize="12"
                FontStyle="Normal" FontWeight="Bold"
                HorizontalAlign="Right" Left="140"
                Name="Override Value Label" Opacity="1.0"
                Stroke="#000000" TextDecoration="None" Top="60" VerticalAlign="Top"><![CDATA[Requested]]></Text>
            <TextBox Fill="None" FontFamily="Arial" FontSize="13"
                FontStyle="Normal" FontWeight="Normal" Height="20"
                HorizontalAlign="Center" Left="150"
                Name="Point Value Text Display" Opacity="1.0"
                Stroke="#000000" TextDecoration="None" Top="35"
                VerticalAlign="Top" Visibility="Visible" Width="65"><![CDATA[...]]></TextBox>
            <TextBox Fill="None" FontFamily="Arial" FontSize="13"
                FontStyle="Normal" FontWeight="Normal" Height="20"
                HorizontalAlign="Center" Left="150"
                Name="Override Value Text Display" Opacity="1.0"
                Stroke="#000000" TextDecoration="None" Top="62"
                VerticalAlign="Top" Width="65"><![CDATA[...]]></TextBox>
            <Bind Name="NOTE1" PreventDefault="False"/>
            <Bind Name="DESCR" PreventDefault="False"/>
            <Bind Name="NAME" PreventDefault="False"/>
            <Script Name="Title Managment" OnMouseClick="OnClick"
                OnMouseDown="OnMouseDown" OnSignalChange="OnChange"><![CDATA[var Note1Selector  = 0; 
var DESCRSelector = 0;
var NAMESelector = 0;					// Global variables that are going to be used in the rest of the component. 
var Note1Title = "";
var DESCRTitle = "";
var NAMESTitle = ""; 
	
	function OnChange(evt)
{
var GroupAccess1 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(0).getChildNodes().item(0);
var GroupAccess2 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(1).getChildNodes().item(0);			// Shortcuts that access the seperate components without having names be used so they do not intefere with the bind names.
var GroupAccess3 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(2).getChildNodes().item(0);

var comp=evt.getCurrentTarget().getParentNode();
var NewTitle = evt.getValue();																	// Gets the value of the bind that was just given a value. In this case the value is going to be the title name.
var Note1Bind = GroupAccess1.getElementsByTagName("Bind").item(0).getFullBindName();
var DESCRBind = GroupAccess1.getElementsByTagName("Bind").item(1).getFullBindName();			// Sets the binds that are used to see what the title name is going to be. 
var NAMEBind = GroupAccess1.getElementsByTagName("Bind").item(2).getFullBindName();
var ComponentTitle = GroupAccess1.getChildByName("Component Title");
var Note1Val = evt.getTarget().getFullBindName() == Note1Bind;
var DESCRVal = evt.getTarget().getFullBindName() == DESCRBind;									// Short cuts that checks which bind that is being given a value to. I used these to see give a value to the global values and then used 
var NAMEVal =  evt.getTarget().getFullBindName() == NAMEBind;									// the values of the global values to make an if statement. 

	if(Note1Val)
	{
		if (NewTitle == "")
		{
		Note1Selector = 0; 										// If statement that checks whether the Note1 bind is changed and sets it to zero if the value assigned is empty.
		}else{													// Sets Note1Title to the value assigned to the bind. 
		Note1Selector = 1
		Note1Title = NewTitle;
		}
	}else if(DESCRVal)
	{
		if (NewTitle == "")
		{
		DESCRSelector = 0; 										// If statement that checks whether the DESCR bind is changed and sets it to zero if the value assigned is empty.
		}else{													// Sets DESCRTitle to the value assigned to the bind. 
		DESCRSelector = 1
		DESCRTitle = NewTitle;
		}
	}else if(NAMEVal)
	{
		if (NewTitle == "")
		{
		NAMESelector = 0; 										// If statement that checks whether the NAME bind is changed and sets it to zero if the value assigned is empty.
		}else{													// Sets NAMESelector to the value assigned to the bind.
		NAMESelector = 1
		NAMESTitle = NewTitle;
		}
	}


	if(Note1Selector == 1)										//	If statement that handles the priory functions. Uses the Selectors to know whether there has been a value assigned to the bind. 
	{
	
	ComponentTitle.setAttribute("Content" , Note1Title);		// Sets the component title to the the value of the bind of Note1Title.
	
	}else if (Note1Selector == 0 && DESCRSelector == 1 )
	{
	
	ComponentTitle.setAttribute("Content" , DESCRTitle);		// Sets the component title to the the value of the bind of DESCRTitle.
	
	}else if (Note1Selector == 0 && DESCRSelector == 0 && NAMESelector == 1)
	{
	
	ComponentTitle.setAttribute("Content" , NAMESTitle);		// Sets the component title to the the value of the bind of NAMESTitle.
	
	}
}



function OnClick(evt)
{

evt.preventDefault();
var GroupAccess1 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(0);
var GroupAccess2 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(1);			// Shortcuts that access the seperate components without having names be used so they do not intefere with the bind names.
var GroupAccess3 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(2);
evt.preventDefault();
var Button = evt.getButton();

if (Button == 2)
{

var comp=evt.getCurrentTarget().getParentNode();
 GroupAccess1.setAttribute("Visibility", "Hidden");		// This is the JavaScript for the close button. This sets the components to hidden
 GroupAccess2.setAttribute("Visibility", "Hidden");		// except for the Analog Display. This closes the menu. 
 GroupAccess3.setAttribute("Visibility", "Visible");

}

}

function OnMouseDown(evt)
{
}

]]></Script>
            <Line Stroke="#626469" StrokeWidth=".5" Visibility="Visible"
                X1="10" X2="225" Y1="28" Y2="28"/>
        </Group>
    </Component>
    <Component Clip="False" Id="" Left="-95" NAValue="2E+38" Name=""
        Top="-70" Visibility="Hidden">
        <Group Name="02">
            <Rectangle Fill="None" Height="20.0" Left="15"
                Name="background" RadiusX="5" RadiusY="5"
                Stroke="#626469" StrokeDashArray="0.0" StrokeWidth="1.0"
                Top="60" Width="70">
                <LinearGradient EndPoint="0,1">
                    <GradientStop Color="#FEFEFE" Offset="0"/>
                    <GradientStop Color="#DFE0E2" Offset="1.0"/>
                </LinearGradient>
                <Expose ExposedAttribute="Stroke" Name="Normal Color"/>
            </Rectangle>
            <TextBox Fill="None" FontFamily="Arial" FontSize="12"
                FontStyle="Normal" FontWeight="Normal" Height="20.0"
                HorizontalAlign="Center" Left="15" Name="Text"
                Stroke="#000000" TextDecoration="None" Top="60"
                VerticalAlign="Middle" Width="70"><![CDATA[Override]]></TextBox>
            <Bind Name="Value" PreventDefault="True"/>
            <Bind Name="Ovr" PreventDefault="True"/>
            <Script Name="OnClickBehavior" OnDocumentLoad=""
                OnMouseClick="OnClick" OnSignalChange="OnChange"><![CDATA[function OnClick(evt)																								// Function that handles the OnClick for the 02.
{
var GroupAccess1 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(0).getChildNodes().item(0);
var GroupAccess2 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(1).getChildNodes().item(0);	// Shortcuts that access the seperate components without having names be used so they do not intefere with the bind names.
var GroupAccess3 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(2).getChildNodes().item(0);

var FinalPromptValue;
var comp=evt.getCurrentTarget().getParentNode();
var Units  = GroupAccess3.getAttribute("Units");	
var decs = GroupAccess3.getAttribute("Decimals");	
var MNLNAValue = parseFloat(GroupAccess2.getAttribute("NAValue"));									
var OvrBind = GroupAccess2.getElementsByTagName("Bind").item(1).getFullBindName();			// Variables that are going to be used for the component. 
var OvrTextBox  =  GroupAccess1.getChildByName("Override Value Text Display");
	
	if(MNLNAValue == "")
	{
	alert("No Workplace Tech NA Value Assigned");
	}
	
		if (GroupAccess2.getChildByName("Text").getAttribute("Content") == "Automatic")
	{
	setForce(OvrBind, false);
	setValue(OvrBind, MNLNAValue);
	}
	
	if (GroupAccess2.getChildByName("Text").getAttribute("Content") == "Override")
	{
		var PromptValue = prompt("Set Override Value", "");	
	
		while ((isNaN(PromptValue) == true) && (PromptValue != null))													
			{
			PromptValue = prompt("Please Enter A Number.\nSet Override Value.", "");		
			}
		var FinalPromptValue = new Number(PromptValue).toFixed(decs);					// Prompt that asks the user for the value of the override and sets a variable to the value that the user inputs. 
		var IntPromptValue = parseInt(PromptValue);
		FinalPromptValue = FinalPromptValue + Units ; 									// Takes the value of the prompt and then adds the units that is an exposed value. The default is degrees Fahrenheit.
		setForce(OvrBind, true);																		
		setValue(OvrBind , PromptValue);												// Then this value is set to the textbox that displays the value of the override. 
		
		//alert(typeof IntPromptValue);
		OvrTextBox.setAttribute("Content" , FinalPromptValue);
		}
	}
	



	function OnChange(evt)																								// Function that handles what happens whenever a bound value changes. 
{
var GroupAccess1 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(0).getChildNodes().item(0);
var GroupAccess2 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(1).getChildNodes().item(0);	// Shortcuts that access the seperate components without having names be used so they do not intefere with the bind names.
var GroupAccess3 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(2).getChildNodes().item(0);

var comp=evt.getCurrentTarget().getParentNode();
var value = evt.getValue();
var ValueBind = GroupAccess2.getElementsByTagName("Bind").item(0).getFullBindName();
var OvrBind = GroupAccess2.getElementsByTagName("Bind").item(1).getFullBindName();
var ForceColor = GroupAccess3.getAttribute("Fill");
var MNLNAValue= parseFloat(GroupAccess2.getAttribute("NAValue"));	
var DisplayTextBox =  GroupAccess3.getChildByName("Text");										// Variables that are going to be used for this component. 
var ValueTextBox =  GroupAccess1.getChildByName("Point Value Text Display");
var Units  = GroupAccess3.getAttribute("Units");
var FinalDisplay = value + Units ; 

	

	if (evt.getTarget().getFullBindName() == ValueBind)											// If statement that checks to see which bind has been changed and sets the valuetextbox to only
	{																							// display the value and not the override value. 
	ValueTextBox.setAttribute("Content" , FinalDisplay);
	DisplayTextBox.setAttribute("Content", FinalDisplay);
	}
	
	if(evt.getTarget().getFullBindName() == OvrBind)											// If statement that handles when the Ovr Bind value is being changed. 
	{
		
		if(value == MNLNAValue)																	// If statement that checks if the value given to the Ovr bind is equal to the MNLNAValue
		{																						// and then does things based off of that.
		GroupAccess2.getChildByName("Text").setAttribute("Content" , "Override");
		GroupAccess3.getChildByName("background").setAttribute("Stroke" , "#626469");
		GroupAccess1.getChildByName("Override Value Text Display").setAttribute("FontSize" , "12");
		GroupAccess1.getChildByName("Override Value Text Display").setAttribute("Content" , "Automatic");		// If the value does equal the MNLNAValue this changes the point to the "normal" state where nothing is forced 
		GroupAccess3.getChildByName("Ovr Notification").setAttribute("Visibility" , "Hidden");					// or overridden. 
		GroupAccess3.getChildByName("Text").setAttribute("Left" , "-4");
		GroupAccess1.getChildByName("Background").setAttribute("Stroke" , "#626469");	
		GroupAccess1.getChildByName("Background").setAttribute("StrokeWidth" , "1");		
		}else
		{
			GroupAccess2.getChildByName("Text").setAttribute("Content" , "Automatic");
			GroupAccess3.getChildByName("background").setAttribute("Stroke" , ForceColor);
			GroupAccess3.getChildByName("Ovr Notification").setAttribute("Visibility" , "Visible");				// If the value does NOT equal the MNLNAValue it will set the point into a "forced" state.
			GroupAccess3.getChildByName("Text").setAttribute("Left" , "8");	
			GroupAccess1.getChildByName("Background").setAttribute("Stroke" , ForceColor);	
			GroupAccess1.getChildByName("Background").setAttribute("StrokeWidth" , "2");											
			
		}
	
	}
	
	}]]></Script>
            <Expose ExposedAttribute="NAValue" Name="MNLNAValue"/>
        </Group>
    </Component>
    <Component Clip="False" ContentWidth="100" Id="" Name="" Units="%"
        Visibility="Visible" Width="100">
        <Group Decimals="1" Name="03" Units="%">
            <Rectangle Fill="None" Height="20.0" Left="0"
                Name="background" RadiusX="5" RadiusY="5"
                Stroke="#626469" StrokeDashArray="0.0" StrokeWidth="1.0"
                Top="0" Width="100">
                <LinearGradient EndPoint="0,1">
                    <GradientStop Color="#FEFEFE" Offset="0"/>
                    <GradientStop Color="#DFE0E2" Offset="1.0"/>
                </LinearGradient>
                <Expose ExposedAttribute="Stroke" Name="Normal Color"/>
                <Expose ExposedAttribute="Width" Name="Component Width"/>
            </Rectangle>
            <Expose ExposedAttribute="Fill" Name="Forced Color"/>
            <Expose ExposedAttribute="Decimals" Name="Decimals"/>
            <Expose ExposedAttribute="Units" Name="Units"/>
            <TextBox Fill="None" FontFamily="Arial" FontSize="15.0"
                FontStyle="Normal" FontWeight="Normal" Height="20.0"
                HorizontalAlign="Center" Left="-4" Name="Text"
                Stroke="#000000" TextDecoration="None" Top="0"
                VerticalAlign="Middle"
                    Width="100"><![CDATA[...]]><Expose
                    ExposedAttribute="Width" Name="Component Width"/>
            </TextBox>
            <Component Clip="False" ContentHeight="20.0"
                ContentWidth="15" Height="20.0" Left="85"
                Name="OvrArrow" Top="0" Width="15.0">
                <Path Fill="#009530" Name="Box"
                    PathData="M0.0,0.0 C5.0,0.0 5,0 10,0 12,0 15,2 15,5 15,10 15,15 15,15 15,18 12,20 9,20 4,20 5.0,20.0 0.0,20.0 0.0,15.0 0.0,5.0 0.0,0.0"
                    Stroke="#004000" StrokeDashArray="0.0" StrokeWidth="1.0"/>
                <Polygon Fill="#FFFFFF" Name="Arrow"
                    Points="9.83830081246947,3.812333812258316 2.670400857925415,9.837342605211944 9.83830081246947,15.862351398165572"
                    Stroke="None" StrokeDashArray="0.0" StrokeWidth="0"/>
                <Expose ExposedAttribute="Left" Name="Override Notification Position"/>
            </Component>
            <Expose ExposedAttribute="Width" Name="Component Width"/>
            <Expose ExposedAttribute="ContentWidth" Name="Component Width"/>
            <Script Name="OnClickBehavior" OnMouseClick="OnClick"><![CDATA[function OnClick(evt)
{
evt.preventDefault();
var GroupAccess1 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(0);
var GroupAccess2 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(1);		// Shortcuts that access the seperate components without having names be used so they do not intefere with the bind names.
var GroupAccess3 =evt.getCurrentTarget().getParentNode().getParentNode().getChildNodes().item(2);

GroupAccess1.setAttribute("Visibility", "Visible");				// This is the JavaScript for the open button. This sets the components to visible 
GroupAccess2.setAttribute("Visibility", "Visible");				// except for the analog display. This opens the menu.
GroupAccess3.setAttribute("Visibility", "Hidden");
 
var CompWidth = parseInt(GroupAccess3.getAttribute("Width"));
var Position = ((CompWidth /2) - 130);
var FinalPosition = Position.toString();
 
GroupAccess1.setAttribute("Left", FinalPosition);				// Handles the position of the menu when the analog display is 
GroupAccess2.setAttribute("Left", FinalPosition);				// a different size. 
 
}]]></Script>
            <Image Height="11.0" Left="8" Name="Ovr Notification"
                Opacity="1.0" Top="4" Visibility="Hidden" Width="14.0"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAA4AAAALCAYAAABPhbxiAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAActJREFUeNpskl+IzFEUxz/3/n5rbJtmjW1+uxqWnZ3kxS6RUiTLE1JYkz954QGFJ+VReWGR2nhQnkXkRbI2pYRkScIWtcraBxpLWs3OzL2/e9zZyaZmTt3OeTjnfs/3+z1KRPg/Prx7I9ZanBNa56dY2tWtaBDhv+LZ0ydy984NtJmkeQ5IbJn4pTlzdkA6l2TrhlUV8eLAOXn1fJht6zMsjhK8//SV4p8pbj78zNadB+lZ0Yvzfel0xIaNfTOfqOvXrsjjoVucOryJjgVNFAoFbj94zY/J31TKJYJA0AhxHDP6pcLJ0+fZteeA0mNjH9ne18uihSm0VqRTLRzNr+T4vh6WdyXJZZrJdgRk2wOSiQqPhodqHMNAo3Q9eWMdE9+LiKv4Z3A2pjM9l7cv7nN18JKEWlVXlrrBwKO3zvMqeXUl9qtaReGnIdUWEUXt6DiWRmpTdcl6VGMF43uqeXS8yLJVW9id369CGztEGg0KJeM8omO6ZBn/ZsjkVtOf31vjmO3Occ+r6kzJe1PGxSW/2jSmXKQtmfA1TAUWlWhhR/8h1qxdp2Z9HLx8QUZGXvrVDMrzrV2Tm8nOI4Zhk/dvM0eOnZg9hL8CDACZfM3GReCGtAAAAABJRU5ErkJggg==]]></Image>
        </Group>
    </Component>
    <Expose ExposedAttribute="Width" Name="Component Width"/>
    <Expose ExposedAttribute="ContentWidth" Name="Component Width"/>
    <Metadata Name="Name" Value="Analog MNL Spt W. Menu"/>
    <Metadata Name="Description" Value=""/>
</Component>
