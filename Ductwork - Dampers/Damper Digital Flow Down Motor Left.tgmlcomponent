<?xml version="1.0"?>
<Component Color="#F0080E" ComponentCounter="4" ContentHeight="40"
    ContentWidth="120" Fill="#FFD100" GridSize="10" Height="40.0"
    Left="0.0" Name="Damper Digital Flow Down Motor Left"
    OnValue="1,on,open,true" Stroke="#42B4E6" Top="5.0" Width="120.0">
    <Metadata Name="Name" Value="Damper Digital Flow Down Motor Left"/>
    <Metadata Name="Description" Value="== Bindings ==&#xd;&#xa;Value - Damper Command&#xd;&#xa;&#xd;&#xa;== Exposed Properties ==&#xd;&#xa;Bind Name - DprCmd - Damper command point&#xd;&#xa;Open Value - 1,on,open,true - Fully open value/s (commer seperated if multiple)&#xd;&#xa;Error, Forced, Database Color - Outline color when point in error, forced or database condition"/>
    <Expose ExposedAttribute="OnValue" Name="Open Value"/>
    <Expose ExposedAttribute="Color" Name="Error Color"/>
    <Expose ExposedAttribute="Fill" Name="Forced Color"/>
    <Expose ExposedAttribute="Stroke" Name="Database Color"/>
    <Rectangle Fill="#009530" Height="15.0" Left="0.0" Name="MotorBg"
        RadiusX="2" RadiusY="2" Stroke="#404040" StrokeDashArray="0.0"
        StrokeWidth="1.0" Top="12.5" Width="20.0"/>
    <Text Fill="None" FontFamily="Arial" FontSize="10.0"
        FontStyle="Normal" FontWeight="Normal" HorizontalAlign="Center"
        Left="10.0" Opacity="1.0" Stroke="#FFFFFF" TextDecoration="None"
        Top="14.41411113739" VerticalAlign="Top"><![CDATA[M]]></Text>
    <Rectangle Fill="#CCCCCC" Height="30.0" Left="21.0" Name="Body"
        Opacity="1.0" RadiusX="5.0" RadiusY="5.0" Stroke="#404040"
        StrokeDashArray="0.0" StrokeWidth="1.0" Top="5.0" Width="88.0">
        <LinearGradient Attribute="Fill" EndPoint="0,0"
            SpreadMethod="Pad" StartPoint="0,1">
            <GradientStop Color="#A1CD53" Name="ColorChange" Offset="0"/>
            <GradientStop Color="#EFEFEF" Offset="1"/>
        </LinearGradient>
    </Rectangle>
    <Path Fill="#626469" Name="Closed"
        PathData="M43.5,20.0 C43.5,20.828 39.023,21.5 33.5,21.5 C27.977,21.5 23.5,20.828 23.5,20.0 C23.5,19.172 27.977,18.5 33.5,18.5 C39.023,18.5 43.5,19.172 43.5,20.0 z M64.833,20.0 C64.833,20.828 60.356,21.5 54.833,21.5 C49.31,21.5 44.833,20.828 44.833,20.0 C44.833,19.172 49.31,18.5 54.833,18.5 C60.356,18.5 64.833,19.172 64.833,20.0 z M86.167,20.0 C86.167,20.828 81.69,21.5 76.167,21.5 C70.644,21.5 66.167,20.828 66.167,20.0 C66.167,19.172 70.644,18.5 76.167,18.5 C81.69,18.5 86.167,19.172 86.167,20.0 z M107.5,20.0 C107.5,20.828 103.023,21.5 97.5,21.5 C91.977,21.5 87.5,20.828 87.5,20.0 C87.5,19.172 91.977,18.5 97.5,18.5 C103.023,18.5 107.5,19.172 107.5,20.0 z"
        Stroke="#626469" StrokeDashArray="0.0" StrokeWidth="1.0" Visibility="Hidden"/>
    <Path Fill="#626469" Name="Open"
        PathData="M99.0,20.0 C99.0,25.523 98.328,30.0 97.5,30.0 C96.672,30.0 96.0,25.523 96.0,20.0 C96.0,14.477 96.672,10.0 97.5,10.0 C98.328,10.0 99.0,14.477 99.0,20.0 z M77.667,20.0 C77.667,25.523 76.995,30.0 76.167,30.0 C75.338,30.0 74.667,25.523 74.667,20.0 C74.667,14.477 75.338,10.0 76.167,10.0 C76.995,10.0 77.667,14.477 77.667,20.0 z M56.333,20.0 C56.333,25.523 55.662,30.0 54.833,30.0 C54.005,30.0 53.333,25.523 53.333,20.0 C53.333,14.477 54.005,10.0 54.833,10.0 C55.662,10.0 56.333,14.477 56.333,20.0 z M35.0,20.0 C35.0,25.523 34.328,30.0 33.5,30.0 C32.672,30.0 32.0,25.523 32.0,20.0 C32.0,14.477 32.672,10.0 33.5,10.0 C34.328,10.0 35.0,14.477 35.0,20.0 z"
        Stroke="#626469" StrokeDashArray="0.0" StrokeWidth="1.0" Visibility="Visible"/>
    <Bind Attribute="" Color="#FFD100" Description=".5" Name="DprCmd" PreventDefault="True">
        <Expose ExposedAttribute="Name" Name="Bind Name"/>
		<Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
        <Script OnDocumentLoad="onLoad" OnSignalChange="onChange"><![CDATA[var dispOpen;
var dispClosed;
var dispColor;
var body;
var HighLightCol="#404040";
var originalBodyColor;
var onValue;

function onLoad(evt)
{
  comp = evt.getCurrentTarget().getParentNode();
  dispOpen = comp.getChildByName("Open");
  dispClosed = comp.getChildByName("Closed");
  dispColor = comp.getChildByName("ColorChange");
  body = comp.getChildByName("Body");
  originalBodyColor=body.getAttribute("Stroke");
  onValue=comp.getAttribute("OnValue").split(',');
}

function onChange(evt)
{
  status = parseInt(evt.getStatus());
  val = evt.getValue();
  
  if(getBool(val)){
	dispOpen.setAttribute("Visibility", "Visible");
	dispClosed.setAttribute("Visibility", "Hidden");
	dispColor.setAttribute("Color", "#A1CD53");
  }
  else{
	dispOpen.setAttribute("Visibility", "Hiddene");
	dispClosed.setAttribute("Visibility", "Visible");
	dispColor.setAttribute("Color", "#DFE0E2");
  }
  
  
  bgStroke = setColour(status);
  if (bgStroke=="device"){
  	body.setAttribute("Stroke", originalBodyColor);
 	body.setAttribute("StrokeWidth", "1");
  }
  else{
	  body.setAttribute("Stroke", bgStroke);
	  body.setAttribute("StrokeWidth", "2");
  }
}

function setColour(status){
var col;

  if(status==2){//Value from Device
  	return "device";
  }
  else{
  		if(status==3){//Forced Value
  			return comp.getAttribute("Fill");
  		}
  		else{
  	 		if(status==1){//Database Value
  	 		return comp.getAttribute("Stroke");
  			}
  			else{
  				if(status==0){
  					return comp.getAttribute("Color")
  				}
  			}
  		}
  }

}

function getBool(val){
	for (var i=0;i<onValue.length;i++){
		if (val == true || val == false){
		val = val.toString();
		}
		else{
			if (isNumber(val)){
				val = Math.round(parseFloat(val));
				val = val.toString();
			}
		}
		if(String(val).toLowerCase() == String(onValue[i]).toLowerCase())
		{
			return true;
		}
	}
	return false;
}

function isNumber (o) {
  return ! isNaN (o-0) && o != null;
}]]></Script>
    </Bind>
</Component>
