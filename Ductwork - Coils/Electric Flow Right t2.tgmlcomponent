<?xml version="1.0"?>
<Component BottomScale="0" ComponentCounter="3" ContentHeight="110"
    ContentWidth="70" GridSize="5" Height="110.0" Left="13.0"
    Name="Electric Flow Right t2" Top="11.0" TopScale="100" Width="70.0">
    <Metadata Name="Name" Value="Electric Flow Right t2"/>
    <Metadata Name="Description" Value="== Bindings ==&#xd;&#xa;###VlvPos - Valve position&#xd;&#xa;&#xd;&#xa;== Exposed Properties ==&#xd;&#xa;&lt;name> - &lt;default value> - &lt;Description>&#xd;&#xa;Bind Name - ElcHtrBat - Valve Position&#xd;&#xa;Top of scale - 100 - fully open value&#xd;&#xa;Bottom of Scale - 0 - fully closed value&#xd;&#xa;Coil Base Color - #FFD100 - Base color of Coil"/>
    <Expose ExposedAttribute="TopScale" Name="Top of Scale"/>
    <Expose ExposedAttribute="BottomScale" Name="Bottom of Scale"/>
    <Curve Fill="None" Opacity="1.0"
        Points="38.0,11.0 38.0,18.0 38.0,90.0 38.0,99.0 43.0,99.0 55.0,99.0 61.0,99.0 61.0,90.0 61.0,18.0 61.0,11.0"
        Stroke="None" StrokeDashArray="0.0" StrokeWidth="1.0">
        <LinearGradient Attribute="Fill" EndPoint="1.0,0.5"
            SpreadMethod="Pad" StartPoint="0.0,0.5">
            <GradientStop Color="#FFD100" Offset="0.0">
                <Expose ExposedAttribute="Color" Name="Electric Battery Base Colour"/>
            </GradientStop>
            <GradientStop Color="#01F0080E" Offset="1.0"/>
        </LinearGradient>
        <Bind Attribute="Opacity" Name="ElcHtrBat" PreventDefault="True">
            <ConvertRange AttributeMaxValue="1" AttributeMinValue="0"
                SignalMaxValue="100" SignalMinValue="0">
                <Expose ExposedAttribute="SignalMaxValue" Name="Top of Scale"/>
                <Expose ExposedAttribute="SignalMinValue" Name="Bottom of Scale"/>
            </ConvertRange>
            <Expose ExposedAttribute="Name" Name="Bind Name"/>
			<Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
        </Bind>
    </Curve>
    <Rectangle Fill="#FFD100" Height="88.0" Left="13.0" Opacity="1.0"
        RadiusX="5.0" RadiusY="5.0" Stroke="#FFD100"
        StrokeDashArray="0.0" StrokeWidth="1.0" Top="11.0" Width="30.0">
        <Expose ExposedAttribute="Fill" Name="Electric Battery Base Colour"/>
        <Expose ExposedAttribute="Stroke" Name="Electric Battery Base Colour"/>
    </Rectangle>
    <Rectangle Height="88.0" Left="13.0" Opacity="1.0" RadiusX="5.0"
        RadiusY="5.0" Stroke="#404040" StrokeDashArray="0.0"
        StrokeWidth="1.0" Top="11.0" Width="30.0">
        <LinearGradient Attribute="Fill" EndPoint="1.0,0.0"
            SpreadMethod="Pad" StartPoint="0.0,0.0">
            <GradientStop Color="#EFEFEF" Offset="0.2"/>
            <GradientStop Color="#7FFFFFFF" Offset="1.0"/>
        </LinearGradient>
    </Rectangle>
    <Polygon Fill="None" Opacity="1.0"
        Points="32.3888537329455,15.0 17.5913408433943,49.9086629303627 27.7381700353206,52.8177221626755 15.0545044200236,95.0 39.9993080311142,44.0905444657422 27.7381700353206,40.4542204253538"
        Stroke="#707070" StrokeDashArray="0.0" StrokeWidth=".5">
        <LinearGradient Attribute="Fill" EndPoint="0,0"
            SpreadMethod="Pad" StartPoint="0,1">
            <GradientStop Color="#FFD100" Name="T" Offset=".5">
                <Expose ExposedAttribute="Color" Name="Electric Battery Base Colour"/>
            </GradientStop>
            <GradientStop Color="#B6C5C9" Name="B" Offset=".51"/>
        </LinearGradient>
    </Polygon>
    <Bind Name="ElcHtrBat" PreventDefault="True">
        <Expose ExposedAttribute="Name" Name="Bind Name"/>
		<Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
        <Script OnDocumentLoad="onLoad" OnSignalChange="onChange"><![CDATA[var comp;
var topScale;
var bottomScale;
var scaleFactor;

function onLoad(evt)
{
	comp = evt.getCurrentTarget().getParentNode();
	topScale = parseFloat(comp.getAttribute("TopScale"));
	bottomScale = parseFloat(comp.getAttribute("BottomScale"));
	scaleFactor = topScale-bottomScale;
	
	
	//alert();
}

function onChange(evt)
{
	val = parseFloat(evt.getValue());
	setDisplay(val)
}

function setDisplay(val){
	if (bottomScale == 0){
		val = (val)/scaleFactor;
	}
	else{
		val = (val-scaleFactor)/scaleFactor;
	}
	t=val;
	b=val-.01;
	if(t == 1) b = .99;
	if (b == 0) t= .01;
	comp.getChildByName("B").setAttribute("Offset", b);
	comp.getChildByName("T").setAttribute("Offset", t);
}]]></Script>
    </Bind>
</Component>
