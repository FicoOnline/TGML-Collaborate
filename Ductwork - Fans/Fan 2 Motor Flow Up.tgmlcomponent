<?xml version="1.0"?>
<Component Color="#FFD100" ComponentCounter="4" ContentHeight="120"
    ContentWidth="120" GridSize="1" Height="120.0" Left="20.0"
    Name="Fan 2 Motor Flow Up" OnValue="1,on,open,true" Stroke="#F0080E"
    Top="8.0" Width="120.0">
    <Metadata Name="Name" Value="Fan 2 Motor Flow Up"/>
    <Metadata Name="Description" Value=""/>
    <Expose ExposedAttribute="Stroke" Name="Alarm Colour"/>
    <Expose ExposedAttribute="Color" Name="Forced Colour"/>
    <Expose ExposedAttribute="OnValue" Name="On Value"/>
    <Path Fill="#C6C9CD" Name="FanBodyExt"
        PathData="M58.0,13.0 L96.0,13.0 L96.0,57.0 L58.0,57.0 z M63.0,92.0 L24.0,92.0 L26.8,87.8 L28.9,83.75 L30.35,78.95 L30.2,73.2 L29.0,69.0 z"
        Stroke="None" StrokeDashArray="0.0" StrokeWidth="1.0"/>
    <Ellipse Height="69.0" Left="27.0" Opacity="1.0" Stroke="None"
        StrokeDashArray="0.0" StrokeWidth="1.0" Top="23.0" Width="69.0">
        <RadialGradient Attribute="Fill" Focus=".5,.5" RadiusX="0.5"
            RadiusY="0.5" SpreadMethod="Pad">
            <GradientStop Color="#FEFEFE" Offset=".6"/>
            <GradientStop Color="#C6C9CD" Name="FanBody" Offset="1.0"/>
        </RadialGradient>
    </Ellipse>
    <Ellipse Fill="#EEEEEE" Height="44.0" Left="41.0" Opacity="1.0"
        Stroke="#404040" StrokeDashArray="0.0" StrokeWidth="1.0"
        Top="36.0" Width="44.0">
        <Bind Color="#F0080E" Fill="#FFD100" Name="Fan#Fbk" Stroke="#42B4E6" PreventDefault="True">
            <Expose ExposedAttribute="Color" Name="Error Color"/>
            <Expose ExposedAttribute="Fill" Name="Forced Color"/>
            <Expose ExposedAttribute="Stroke" Name="Database Color"/>
            <Expose ExposedAttribute="Name" Name="Feedback Bind"/>
			<Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
            <Script OnDocumentLoad="onLoad" OnSignalChange="onChange"><![CDATA[var body;
var HighLightCol="#404040";
var originalBodyColor;

function onLoad(evt)
{
  comp = evt.getCurrentTarget();
  body = comp.getParentNode();
  originalBodyColor=body.getAttribute("Stroke");
}

function onChange(evt)
{
  status = parseInt(evt.getStatus());
  
  bgStroke = setColour(status);
  if (bgStroke=="device"){
  	body.setAttribute("Stroke", originalBodyColor);
 	body.setAttribute("StrokeWidth", "1");
  }
  else{
	  body.setAttribute("Stroke", bgStroke);
	  body.setAttribute("StrokeWidth", "2");
  }
}

function setColour(status){
var col;

  if(status==2){//Value from Device
  	return "device";
  }
  else{
  		if(status==3){//Forced Value
  			return comp.getAttribute("Fill");
  		}
  		else{
  	 		if(status==1){//Database Value
  	 		return comp.getAttribute("Stroke");
  			}
  			else{
  				if(status==0){
  					return comp.getAttribute("Color")
  				}
  			}
  		}
  }

}]]></Script>
        </Bind>
    </Ellipse>
    <Component Clip="False" ContentHeight="41.63" ContentWidth="41.63"
        Height="41.63" Left="42.370223159791" Top="37.369987602234" Width="41.6299999999999">
        <Path
            PathData="M20.6300048828125,20.6300048828125 L41.6300038828125,20.6300048828125 M20.6300048828125,20.6300048828125 L34.6300038828125,25.6300048828125 C40.506503882812467,26.72900488281249 41.6300038828125,22.6300048828125 41.6300038828125,20.6300048828125"
            Stroke="None" StrokeDashArray="0.0" StrokeWidth="1.0">
            <LinearGradient Attribute="Fill" EndPoint="0.0,1"
                SpreadMethod="Reflect" StartPoint="0,0">
                <GradientStop Color="#9FA0A4" Offset="0.0"/>
                <GradientStop Color="#EEEEEE" Offset="0.2"/>
                <GradientStop Color="#101010" Offset="1.0"/>
            </LinearGradient>
        </Path>
        <Path
            PathData="M20.6300048828125,20.6300048828125 L41.6300048828125,20.6300048828125 M20.6300048828125,20.6300048828125 L34.6300048828125,25.6300048828125 C40.506504882812465,26.72900488281249 41.6300048828125,22.6300048828125 41.6300048828125,20.6300048828125"
            Stroke="None" StrokeDashArray="0.0" StrokeWidth="1.0">
            <LinearGradient Attribute="Fill" EndPoint="0.0,1"
                SpreadMethod="Reflect" StartPoint="0,0">
                <GradientStop Color="#9FA0A4" Offset="0.0"/>
                <GradientStop Color="#EEEEEE" Offset="0.2"/>
                <GradientStop Color="#101010" Offset="1.0"/>
            </LinearGradient>
            <Rotate Angle="45" Center="0.0,0.0"/>
        </Path>
        <Path
            PathData="M20.6300048828125,20.6300048828125 L41.6300048828125,20.6300048828125 M20.6300048828125,20.6300048828125 L34.6300048828125,25.6300048828125 C40.506504882812465,26.72900488281249 41.6300048828125,22.6300048828125 41.6300048828125,20.6300048828125"
            Stroke="None" StrokeDashArray="0.0" StrokeWidth="1.0">
            <LinearGradient Attribute="Fill" EndPoint="0.0,1"
                SpreadMethod="Reflect" StartPoint="0,0">
                <GradientStop Color="#9FA0A4" Offset="0.0"/>
                <GradientStop Color="#EEEEEE" Offset="0.2"/>
                <GradientStop Color="#101010" Offset="1.0"/>
            </LinearGradient>
            <Rotate Angle="90" Center="0.0,0.0"/>
        </Path>
        <Path
            PathData="M20.729004882812546,20.6300048828125 L41.729004882812546,20.6300048828125 M20.729004882812546,20.6300048828125 L34.729004882812546,25.6300048828125 C40.605504882812511,26.72900488281249 41.729004882812546,22.6300048828125 41.729004882812546,20.6300048828125"
            Stroke="None" StrokeDashArray="0.0" StrokeWidth="1.0">
            <LinearGradient Attribute="Fill" EndPoint="0.0,1"
                SpreadMethod="Reflect" StartPoint="0,0">
                <GradientStop Color="#9FA0A4" Offset="0.0"/>
                <GradientStop Color="#EEEEEE" Offset="0.2"/>
                <GradientStop Color="#101010" Offset="1.0"/>
            </LinearGradient>
            <Rotate Angle="135" Center="0.0,0.0"/>
        </Path>
        <Path
            PathData="M20.998005882812549,20.6300048828125 L41.998005882812549,20.6300048828125 M20.998005882812549,20.6300048828125 L34.998005882812549,25.6300048828125 C40.874505882812514,26.72900488281249 41.998005882812549,22.6300048828125 41.998005882812549,20.6300048828125"
            Stroke="None" StrokeDashArray="0.0" StrokeWidth="1.0">
            <LinearGradient Attribute="Fill" EndPoint="0.0,1"
                SpreadMethod="Reflect" StartPoint="0,0">
                <GradientStop Color="#9FA0A4" Offset="0.0"/>
                <GradientStop Color="#EEEEEE" Offset="0.2"/>
                <GradientStop Color="#101010" Offset="1.0"/>
            </LinearGradient>
            <Rotate Angle="180" Center="0.0,0.0"/>
        </Path>
        <Path
            PathData="M20.630006882812495,20.72900488281249 L41.630006882812495,20.72900488281249 M20.630006882812495,20.72900488281249 L34.630006882812495,25.72900488281249 C40.506506882812459,26.828004882812479 41.630006882812495,22.72900488281249 41.630006882812495,20.72900488281249"
            Stroke="None" StrokeDashArray="0.0" StrokeWidth="1.0">
            <LinearGradient Attribute="Fill" EndPoint="0.0,1"
                SpreadMethod="Reflect" StartPoint="0,0">
                <GradientStop Color="#9FA0A4" Offset="0.0"/>
                <GradientStop Color="#EEEEEE" Offset="0.2"/>
                <GradientStop Color="#101010" Offset="1.0"/>
            </LinearGradient>
            <Rotate Angle="225" Center="0.0,0.0"/>
        </Path>
        <Path
            PathData="M20.479007882812539,20.998005882812492 L41.479007882812539,20.998005882812492 M20.479007882812539,20.998005882812492 L34.479007882812539,25.998005882812492 C40.3555078828125,27.097005882812482 41.479007882812539,22.998005882812492 41.479007882812539,20.998005882812492"
            Stroke="None" StrokeDashArray="0.0" StrokeWidth="1.0">
            <LinearGradient Attribute="Fill" EndPoint="0.0,1"
                SpreadMethod="Reflect" StartPoint="0,0">
                <GradientStop Color="#9FA0A4" Offset="0.0"/>
                <GradientStop Color="#EEEEEE" Offset="0.2"/>
                <GradientStop Color="#101010" Offset="1.0"/>
            </LinearGradient>
            <Rotate Angle="270" Center="0.0,0.0"/>
        </Path>
        <Path
            PathData="M20.630009882812487,21.630006882812495 L41.630009882812487,21.630006882812495 M20.630009882812487,21.630006882812495 L34.630009882812487,26.630006882812495 C40.506509882812452,27.729006882812484 41.630009882812487,23.630006882812495 41.630009882812487,21.630006882812495"
            Stroke="None" StrokeDashArray="0.0" StrokeWidth="1.0">
            <LinearGradient Attribute="Fill" EndPoint="0.0,1"
                SpreadMethod="Reflect" StartPoint="0,0">
                <GradientStop Color="#9FA0A4" Offset="0.0"/>
                <GradientStop Color="#EEEEEE" Offset="0.2"/>
                <GradientStop Color="#101010" Offset="1.0"/>
            </LinearGradient>
            <Rotate Angle="315" Center="0.0,0.0"/>
        </Path>
        <Rotate>
            <Animate Animation="Stop" Attribute="Angle"
                CalcMode="Linear" Duration="2" From="360" To="0">
                <Bind Attribute="Animation" Name="Fan#Fbk" PreventDefault="True">
                    <Expose ExposedAttribute="Name" Name="Feedback Bind"/>
					<Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
                    <ConvertValue AttributeValue="Start" SignalMoreOrEqualTo="1"/>
                    <ConvertValue AttributeValue="Stop" SignalLessOrEqualTo="0"/>
                </Bind>
            </Animate>
        </Rotate>
    </Component>
    <Ellipse Fill="None" Height="44.0" Left="41.0" Name="" Opacity="1.0"
        Stroke="#F0080E" StrokeDashArray="0.0" StrokeWidth="2"
        Top="36.0" Visibility="Hidden" Width="44.0">
        <Bind Attribute="Visibility" Name="Fan#Alm" PreventDefault="True">
            <Expose ExposedAttribute="Name" Name="Alarm Bind"/>
			<Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
            <ConvertValue AttributeValue="Visible" SignalMoreOrEqualTo="1"/>
            <ConvertValue AttributeValue="Hidden" SignalLessOrEqualTo="0"/>
        </Bind>
        <Expose ExposedAttribute="Stroke" Name="Alarm Color"/>
    </Ellipse>
    <Line Opacity="1.0" Stroke="#404040" StrokeDashArray="0.0"
        StrokeWidth="1.0" X1="63.0" X2="63.0" Y1="58.0" Y2="37.0"/>
    <Metadata Name="Version" Value="1.0"/>
    <Curve Name="" Opacity="1.0"
        Points="28.0,66.0 24.0,55.0 31.0,26.0 58.0,23.0 58.0,20.0 58.0,17.0 58.0,15.0"
        Stroke="#404040" StrokeDashArray="0.0" StrokeWidth="1.0" Visibility="Visible"/>
    <Curve Name="" Opacity="1.0"
        Points="96.0,15.0 96.0,21.0 96.0,53.0 96.0,59.0 95.0,75.0 83.0,87.0 75.0,89.0"
        Stroke="#404040" StrokeDashArray="0.0" StrokeWidth="1.0" Visibility="Visible"/>
    <Path Fill="None"
        PathData="M28.0,66.0 C24.0,55.0 31.0,26.0 58.0,23.0 C58.0,20.0 58.0,17.0 58.0,15.0 M96.0,15.0 C96.0,21.0 96.0,53.0 96.0,59.0 C95.0,75.0 83.0,87.0 75.0,89.0"
        Stroke="#F0080E" StrokeDashArray="0.0" StrokeWidth="2" Visibility="Hidden">
        <Bind Attribute="Visibility" Name="Fan#Alm" PreventDefault="True">
            <Expose ExposedAttribute="Name" Name="Alarm Bind"/>
			<Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
            <ConvertValue AttributeValue="Visible" SignalMoreOrEqualTo="1"/>
            <ConvertValue AttributeValue="Hidden" SignalLessOrEqualTo="0"/>
        </Bind>
        <Expose ExposedAttribute="Stroke" Name="Alarm Color"/>
    </Path>
    <Curve Opacity="1.0"
        Points="29.0,67.0 30.197641888986,69.864118189327 31.59247934738,74.592379363513 31.0,79.0 30.344790840849,83.877756630951 26.115079053477,89.292577278473 24.0,92.0"
        Stroke="#404040" StrokeDashArray="0.0" StrokeWidth="1.0"/>
    <Line Opacity="1.0" Stroke="#404040" StrokeDashArray="0.0"
        StrokeWidth="1.0" X1="24.0" X2="59.0" Y1="92.0" Y2="92.0"/>
    <Line Opacity="1.0" Stroke="#404040" StrokeDashArray="0.0"
        StrokeWidth="1.0" X1="63.0" X2="81.0" Y1="58.0" Y2="70.0"/>
    <Line Opacity="1.0" Stroke="#404040" StrokeDashArray="0.0"
        StrokeWidth="1.0" X1="63.0" X2="44.0" Y1="58.0" Y2="69.0"/>
    <Ellipse Fill="#EEEEEE" Height="20.0" Left="53.0" Opacity="1.0"
        Stroke="#404040" StrokeDashArray="0.0" StrokeWidth="1.0"
        Top="48.0" Width="20.0"/>
    <Ellipse Fill="#DFE0E2" Height="22.0" Left="20.0" Name="Mtr1"
        Opacity="1.0" Stroke="#404040" StrokeDashArray="0.0"
        StrokeWidth="1.0" Top="66.134999990463" Width="22.0"/>
    <Path Fill="None"
        PathData="M96.0,15.0 C96.0,21.0 96.0,53.0 96.0,59.0 C95.0,75.0 83.0,87.0 75.0,89.0 M28.0,66.0 C24.0,55.0 31.0,26.0 58.0,23.0 C58.0,20.0 58.0,17.0 58.0,15.0 M42.0,77.135 C42.0,83.21 37.075,88.135 31.0,88.135 C24.925,88.135 20.0,83.21 20.0,77.135 C20.0,71.06 24.925,66.135 31.0,66.135 C37.075,66.135 42.0,71.06 42.0,77.135 z"
        Stroke="#000000" StrokeDashArray="0.0" StrokeWidth="2" Visibility="Hidden">
        <Bind Color="#F0080E" Fill="#FFD100" Name="Fan#Mtr1Cmd" Stroke="#42B4E6" PreventDefault="True">
            <Expose ExposedAttribute="Color" Name="Error Color"/>
            <Expose ExposedAttribute="Fill" Name="Forced Color"/>
            <Expose ExposedAttribute="Stroke" Name="Database Color"/>
            <Expose ExposedAttribute="Name" Name="Motor 1 Command Bind"/>
			<Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
            <Script OnDocumentLoad="onLoad" OnSignalChange="onChange"><![CDATA[var body;
var HighLightCol="#404040";
var originalBodyColor;

function onLoad(evt)
{
  comp = evt.getCurrentTarget();
  body = comp.getParentNode();
  originalBodyColor=body.getAttribute("Stroke");
}

function onChange(evt)
{
  status = parseInt(evt.getStatus());
  
  bgStroke = setColour(status);
  if (bgStroke=="device"){
  	body.setAttribute("Visibility", "Hidden");
  }
  else{
	  body.setAttribute("Stroke", bgStroke);
	  body.setAttribute("Visibility", "Visible");
  }
}

function setColour(status){
var col;

  if(status==2){//Value from Device
  	return "device";
  }
  else{
  		if(status==3){//Forced Value
  			return comp.getAttribute("Fill");
  		}
  		else{
  	 		if(status==1){//Database Value
  	 		return comp.getAttribute("Stroke");
  			}
  			else{
  				if(status==0){
  					return comp.getAttribute("Color")
  				}
  			}
  		}
  }

}]]></Script>
        </Bind>
    </Path>
    <Ellipse Fill="#DFE0E2" Height="22.0" Left="82.0" Name="Mtr2"
        Opacity="1.0" Stroke="#404040" StrokeDashArray="0.0"
        StrokeWidth="1.0" Top="66.134999990463" Width="22.0"/>
    <Path Fill="None"
        PathData="M28.0,66.0 C24.0,55.0 31.0,26.0 58.0,23.0 C58.0,20.0 58.0,17.0 58.0,15.0 M96.0,15.0 L96.0,59.0 C96.0,61.0 96.0,62.0 95.0,66.0 M84.0,84.0 C82.0,86.0 77.0,89.0 75.0,90.0 M104.0,77.135 C104.0,83.21 99.075,88.135 93.0,88.135 C86.925,88.135 82.0,83.21 82.0,77.135 C82.0,71.06 86.925,66.135 93.0,66.135 C99.075,66.135 104.0,71.06 104.0,77.135 z"
        Stroke="#000000" StrokeDashArray="0.0" StrokeWidth="2" Visibility="Hidden">
        <Bind Color="#F0080E" Fill="#FFD100" Name="Fan#Mtr2Cmd" Stroke="#42B4E6" PreventDefault="True">
            <Expose ExposedAttribute="Color" Name="Error Color"/>
            <Expose ExposedAttribute="Fill" Name="Forced Color"/>
            <Expose ExposedAttribute="Stroke" Name="Database Color"/>
            <Expose ExposedAttribute="Name" Name="Motor 1 Command Bind"/>
			<Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
            <Script OnDocumentLoad="onLoad" OnSignalChange="onChange"><![CDATA[var body;
var HighLightCol="#404040";
var originalBodyColor;

function onLoad(evt)
{
  comp = evt.getCurrentTarget();
  body = comp.getParentNode();
  originalBodyColor=body.getAttribute("Stroke");
}

function onChange(evt)
{
  status = parseInt(evt.getStatus());
  
  bgStroke = setColour(status);
  if (bgStroke=="device"){
  	body.setAttribute("Visibility", "Hidden");
  }
  else{
	  body.setAttribute("Stroke", bgStroke);
	  body.setAttribute("Visibility", "Visible");
  }
}

function setColour(status){
var col;

  if(status==2){//Value from Device
  	return "device";
  }
  else{
  		if(status==3){//Forced Value
  			return comp.getAttribute("Fill");
  		}
  		else{
  	 		if(status==1){//Database Value
  	 		return comp.getAttribute("Stroke");
  			}
  			else{
  				if(status==0){
  					return comp.getAttribute("Color")
  				}
  			}
  		}
  }

}]]></Script>
        </Bind>
    </Path>
    <Curve Fill="#DFE0E2" Opacity="1.0"
        Points="62.0,69.134999990463 90.0,83.134999990463 62.0,69.134999990463 90.0,83.134999990463 97.0,86.134999990463 103.0,78.134999990463 98.0,72.134999990463 68.0,48.134999990463 98.0,72.134999990463 68.039001464844,48.270000219345 63.0,44.134999990463 62.960998535156,44.0 58.0,48.134999990463 26.0,72.134999990463 58.0,48.134999990463 26.0,72.134999990463 21.0,78.134999990463 26.0,87.134999990463 35.0,83.134999990463 62.0,69.134999990463 35.0,83.134999990463 62.0,69.134999990463"
        Stroke="#404040" StrokeDashArray="0.0" StrokeWidth="1.0"/>
    <Rectangle Fill="#9FA0A4" Height="3.0" Left="21.0" Opacity="1.0"
        RadiusX="0.0" RadiusY="0.0" Stroke="#9FA0A4"
        StrokeDashArray="0.0" StrokeWidth="1.0" Top="8.0" Width="88.0"/>
    <Rectangle Fill="#404040" Height="2.0" Left="57.0" Opacity="1.0"
        RadiusX="0.0" RadiusY="0.0" Stroke="#404040"
        StrokeDashArray="0.0" StrokeWidth="1.0" Top="12.0" Width="40.0"/>
    <Rectangle Height="21.0" Left="21.0" Opacity="1.0" RadiusX="2"
        RadiusY="2" Stroke="#404040" StrokeDashArray="0.0"
        StrokeWidth="1" Top="88.0" Visibility="Visible" Width="88.0">
        <LinearGradient Attribute="Fill" EndPoint="0.0,1.0"
            SpreadMethod="Pad" StartPoint="0.0,0.0">
            <GradientStop Color="#EFEFEF" Offset="0.0"/>
            <GradientStop Color="#DFE0E2" Offset="1.0"/>
        </LinearGradient>
    </Rectangle>
    <Bind Name="Fan#Mtr1Cmd" PreventDefault="True">
        <Expose ExposedAttribute="Name" Name="Motor 1 Command Bind"/>
		<Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
        <Script OnDocumentLoad="onLoad" OnSignalChange="onChange"><![CDATA[var comp;
var onValue;

function onLoad(evt)
{
	comp=evt.getCurrentTarget().getParentNode();
	onValue=comp.getAttribute("OnValue").split(',');
}

function onChange(evt)
{
	val = evt.getValue();
	if(getBool(val)){
		comp.getChildByName("FanBody").setAttribute("Color", "#4FA600");
		comp.getChildByName("FanBodyExt").setAttribute("Fill", "#4FA600");
		comp.getChildByName("Mtr1").setAttribute("Fill", "#4FA600");
	}
	else{
		comp.getChildByName("Mtr1").setAttribute("Fill", "#DFE0E2");
		if(comp.getChildByName("Mtr2").getAttribute("Fill") == "#DFE0E2"){
			comp.getChildByName("FanBody").setAttribute("Color", "#C6C9CD");
			comp.getChildByName("FanBodyExt").setAttribute("Fill", "#C6C9CD");
		}
	}
}

function getBool(val){
	for (var i=0;i<onValue.length;i++){
		if (val == true || val == false){
		val = val.toString();
		}
		else{
			if (isNumber(val)){
				val = Math.round(parseFloat(val));
				val = val.toString();
			}
		}
		if(String(val).toLowerCase() == String(onValue[i]).toLowerCase())
		{
			return true;
		}
	}
	return false;
}

function isNumber (o) {
  return ! isNaN (o-0) && o != null;
}]]></Script>
    </Bind>
    <Bind Name="Fan#Mtr2Cmd" PreventDefault="True">
        <Expose ExposedAttribute="Name" Name="Motor 2 Command Bind"/>
		<Expose ExposedAttribute="PreventDefault" Name="Prevent Default"/>
        <Script OnDocumentLoad="onLoad" OnSignalChange="onChange"><![CDATA[var comp;
var onValue;

function onLoad(evt)
{
	comp=evt.getCurrentTarget().getParentNode();
	onValue=comp.getAttribute("OnValue").split(',');
}

function onChange(evt)
{
	val = evt.getValue();
	if(getBool(val)){
		comp.getChildByName("FanBody").setAttribute("Color", "#4FA600");
		comp.getChildByName("FanBodyExt").setAttribute("Fill", "#4FA600");
		comp.getChildByName("Mtr2").setAttribute("Fill", "#4FA600");
	}
	else{
		comp.getChildByName("Mtr2").setAttribute("Fill", "#DFE0E2");
		if(comp.getChildByName("Mtr1").getAttribute("Fill") == "#DFE0E2"){
			comp.getChildByName("FanBody").setAttribute("Color", "#C6C9CD");
			comp.getChildByName("FanBodyExt").setAttribute("Fill", "#C6C9CD");
		}
	}
}

function getBool(val){
	for (var i=0;i<onValue.length;i++){
		if (val == true || val == false){
		val = val.toString();
		}
		else{
			if (isNumber(val)){
				val = Math.round(parseFloat(val));
				val = val.toString();
			}
		}
		if(String(val).toLowerCase() == String(onValue[i]).toLowerCase())
		{
			return true;
		}
	}
	return false;
}

function isNumber (o) {
  return ! isNaN (o-0) && o != null;
}]]></Script>
    </Bind>
</Component>
